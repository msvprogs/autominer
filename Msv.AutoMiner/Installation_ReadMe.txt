How to install Msv.AutoMiner.

AutoMiner consists from several parts:
1. Coin info aggregation service
2. Central node (controller) service
3. Web-based frontend
4. Rig client

First 3 parts should be installed on one machine, as they will check hardware key of the license file.
This machine will be referred as 'central' below.

==Prerequisites for Windows==

1. Download and install the latest .NET Core Runtime from https://www.microsoft.com/net/download/windows on the central machine.
Current version is 2.0.5, download it from https://www.microsoft.com/net/download/thank-you/dotnet-runtime-2.0.5-windows-x64-installer

2. Install MySQL Server on the central machine.
Download it from this page: https://dev.mysql.com/downloads/mysql/

3. Check the version of the .NET Framework on the rigs: at least v4.6.1 is required.
Download and install the latest version if needed: https://www.microsoft.com/net/download/thank-you/net471

==Prerequisites for Linux==

1. Install .NET Core 2.x on your central machine.
There is a detailed manual on the Microsoft site how to do it for various Linux distributions:
https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore2x

2. Install MySQL Server package on the central machine.
Example for Ubuntu:
sudo apt-get install mysql-server

3. Install Mono on the rig machines.
Installation instructions: http://www.mono-project.com/download/stable/#download-lin
You should install 'mono-complete' package.

4. Check that 'dmidecode' command is available on your rig machines.
Try to execute this command from the terminal without super-user.
If command wasn't found, install the dmidecode package for your system.
If insufficient privileges error was returned, assign execution permissions for all users with following command (run it as super-user):
chmod +s /usr/sbin/dmidecode


== Software deployment ==

1. Initialize the server database and generate X509 certificates:
- Open 'appconfig.json' file in the Server Initializer folder.
- Specify MySQL server host, port and user credentials in the AutoMinerDb connection string section.
User must have permissions to create databases.
- You will need 3 certificates: root, for central node service and for the frontend website.
If you already have some of them, set the corresponding Enabled flag to false.
Please note that frontend certificate's common name should match domain name of the server, and public part of the root one should be trusted on the client machines.
Or else browser will warn you that server's certificate is invalid or untrusted.
- Change the common names, file names and passwords to your own ones.
- Save the config
- Run the program:
dotnet Msv.AutoMiner.ServierInitializer.dll
- If all went OK, the MySQL database and all certificate files should have been created.
- Do not lose the admin's password generated by the program. If you've lost it, delete all users from the DB and run this program again.

2. Configure coin info service:
- Copy the sample config from appsettings_sample folder.
- Set your MySQL credentials in the connection string.
- Optionally, change the service port.

3. Configure central node (control center) service:
- Copy ROOT .CER certificate and CENTRAL NODE .PFX certificate to service folder.
- Copy the sample config from appsettings_sample folder.
- Set your MySQL credentials in the connection string.
- Set your root certificate file name in the RootCertificateFileName field.
- Set the correct URL for previously configured coin info service.
- Configure the HttpsExternal endpoint: set port, central node certificate filename and password.
- If you want to use Telegram bot, set Enabled=true, access token for it and your Telegram username to receive notifications.
How to create a bot access token: just talk to @BotFather bot.
- FileStorage:Miners - Specify the folder to store miner software which will be distributed on the rigs

4. Configure frontend:
- Copy FRONTEND .PFX certificate to service folder.
- Copy the sample config from appsettings_sample folder.
- Set your MySQL credentials in the connection string.
- Set the correct URLs for previously configured coin info and central node services.
- Set FileStorage:Miners to the same path which has been specified in step 3.
- Set port, frontend certificate filename and password for the HTTPS endpoint. Disable HTTP if you don't need it. Expose only HTTPS endpoint to the Internet.
You can use third-party certificates here - it's even preferable, because client browsers won't complain about untrusted signing authority.

5. Run any of these services to get license ID and hardware key.
To run a service, execute 'dotnet Msv.Licensing.Starter.DotNetCore.dll' from the service folder.
Contact the developers, send them these keys and get free one-week license or any kind of the paid one.
After acquiring the license (you will receive 2 key files), copy the SERVICE key file to each service folder.

6. Configure rigs:
- copy the sample config file from appsettings_sample folder and rename it to Msv.Licensing.Starter.DotNet.exe.config.
- set your central node service URL in the ControlCenterServiceUrl setting
- copy the ROOT .CER certificate to the rig client folder
- optionally: set ElectricityKwhCostUsd to your real electricity cost per 1 kWh in USD and SystemPowerUsageWatts to the power usage of the rig WITHOUT graphic cards.
- copy RIG license key to the client folder.
To run the rig under Linux use command: mono Msv.Licensing.Starter.DotNet.exe
To run under Windows just run the .exe.