@using Msv.AutoMiner.Data
@model Msv.AutoMiner.FrontEnd.Models.Coins.CoinEditModel

@{ ViewBag.Title = "Edit coin details";}    

<h2 class="text-center">Edit coin details</h2>

<div class="text-danger" asp-validation-summary="All"></div>

<form asp-action="Save" method="post">
    <input asp-for="Id" />

    <h3>Basic info</h3>
    <div class="form-group">
        <label asp-for="Symbol">Symbol:</label>
        <input asp-for="Symbol" class="form-control" placeholder="For example, BTC"/>
    </div>
    <div class="form-group">
        <label asp-for="Name">Name:</label>
        <input asp-for="Name" class="form-control" placeholder="For example, BitCoin"/>
    </div>
    <div class="form-group">
        <label asp-for="AlgorithmId">Algorithm:</label>
        <select asp-for="AlgorithmId" class="form-control">
            <option value="" disabled="disabled" selected="@(Model.AlgorithmId == null ? "selected" : "")">Select...</option>
            @foreach (var algorithm in Model.AvailableAlgorithms.OrderBy(x => x.Name))
            {
                <option value="@algorithm.Id">@algorithm.Name</option>
            }
        </select>
    </div>

    <h3>Additional algorithm parameters</h3>
    <div class="form-group">
        <label asp-for="MaxTarget">Max hash target (Bitcoin-like by default):</label>
        <input asp-for="MaxTarget" class="form-control" placeholder="For example, 0x00000000FFFF0000000000000000000000000000000000000000000000000000"/>
    </div>

    <h3>Local node parameters</h3>
    <div class="form-group">
        <label asp-for="NodeUrl">Node URL:</label>
        <input asp-for="NodeUrl" class="form-control" placeholder="For example, http://localhost:12345"/>
    </div>
    <div class="form-group">
        <label asp-for="NodeLogin">RPC username:</label>
        <input asp-for="NodeLogin" class="form-control"/>
    </div>
    <div class="form-group">
        <label asp-for="NodePassword">RPC password:</label>
        <input asp-for="NodePassword" class="form-control"/>
    </div>

    <h3>Remote network info provider parameters</h3>
    <div class="form-group">
        <label asp-for="NetworkInfoApiType">Remote API type:</label>
        <select asp-for="NetworkInfoApiType" class="form-control">
            @foreach (CoinNetworkInfoApiType apiType in Enum.GetValues(typeof(CoinNetworkInfoApiType)))
            {
                <option value="@apiType">@apiType</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="NetworkApiUrl">API URL:</label>
        <input asp-for="NetworkApiUrl" class="form-control"/>
    </div>
    <div class="form-group">
        <label asp-for="NetworkApiName">API coin name:</label>
        <input asp-for="NetworkApiName" class="form-control"/>
    </div>
    
    <h3>Block reward calculation function</h3>
    <p>
        <small>Here you can write JS code to calculate the coin block reward. <br />
            You can use the variable <code>height</code> that contains the current block height. <br />
            Calculated value should be returned by using the <code>return</code> operator.
        </small>
    </p>
    <textarea asp-for="RewardCalculationJavaScript"></textarea>

    <button type="submit" class="btn btn-success">
        <i class="glyphicon glyphicon-floppy-disk"></i> Save
    </button>
    <a class="btn btn-default" asp-action="Index">
        <i class="glyphicon glyphicon-chevron-left"></i> Return to coins list
    </a>
</form>

@section Scripts { 
    <script>
        $(function() {
            CodeMirror.fromTextArea(document.getElementById("RewardCalculationJavaScript"),
                {
                    mode: "javascript"
                });
        })
    </script>
}