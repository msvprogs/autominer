@using Msv.AutoMiner.FrontEnd.Models.Shared
@using Msv.AutoMiner.FrontEnd.Models.WalletOperations
@model PaginationModel<WalletOperationModel>
    
@{ ViewBag.Title = "Wallet operations"; }    

<h2 class="text-center">@Model.Title</h2>

@await Component.InvokeAsync("Pagination", Model)

<table class="table table-bordered table-striped sticky-header">
    <thead>
    <tr>
        <th>ID</th>
        <th>Currency</th>
        <th>Exchange</th>
        <th>Date</th>
        <th>Amount</th>
        <th>Data</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var operation in Model.CurrentPageItems)
    {
        <tr>
            <td>@operation.Id</td>
            <td class="space-no-wrap">
                @await Component.InvokeAsync("LogoCoinName", new LogoCoinNameModel(operation.CurrencyName, operation.CurrencyLogo))
            </td>
            <td>@operation.Exchange</td>
            <td msv-absolute-date="@operation.DateTime"></td>
            <td class="space-no-wrap" msv-amount="@operation.Amount" msv-currency="@operation.CurrencySymbol"></td>
            <td>
                <table class="transaction-details">
                    @if (operation.Transaction != null)
                    {
                        <tr>
                            <th>Tx:</th>
                            <td>@await Component.InvokeAsync("LongId", new LongIdModel(operation.Transaction)
                                {
                                    Url = operation.TransactionUrl?.ToString()
                                })</td>
                        </tr>
                    }
                    @if (operation.TargetAddress != null)
                    {
                        <tr>
                            <th>Wallet:</th>
                            <td>@await Component.InvokeAsync("LongId", new LongIdModel(operation.TargetAddress)
                                {
                                    Url = operation.TargetAddressUrl?.ToString()
                                })</td>
                        </tr>
                    }  
                </table>
            </td>
        </tr>
    }
    </tbody>
</table>

@await Component.InvokeAsync("Pagination", Model)