@using Msv.AutoMiner.FrontEnd.Models.PoolPayments
@using Msv.AutoMiner.FrontEnd.Models.Shared
@model PaginationModel<PoolPaymentModel>

@{ ViewBag.Title = "Pool payments";}    

<h2 class="text-center">@Model.Title</h2>

@await Component.InvokeAsync("Pagination", Model)

<table class="table table-bordered table-striped">
    <tr>
        <th>ID</th>
        <th>Pool</th>
        <th>Type</th>
        <th>Date</th>
        <th>Currency</th>
        <th>Amount</th>
        <th>Data</th>
    </tr>
    @foreach (var payment in Model.CurrentPageItems)
    {
        <tr>
            <td>@payment.Id</td>
            <td>@payment.PoolName</td>
            <td>@payment.Type</td>
            <td msv-absolute-date="@payment.DateTime"></td>
            <td class="space-no-wrap">
                @await Component.InvokeAsync("LogoCoinName", new LogoCoinNameModel(payment.CurrencyName, payment.CurrencyLogo))
            </td>
            <td msv-amount="@payment.Amount" msv-currency="@payment.CurrencySymbol"></td>
            <td>
                @if (payment.Transaction != null)
                {
                    <div class="transaction-small">Tx: @payment.Transaction</div>
                }
                @if (payment.BlockHash != null)
                {
                    <div class="transaction-small">Block: @payment.BlockHash</div>
                }
                @if (payment.Address != null)
                {
                    <div class="transaction-small">Wallet: @payment.Address</div>
                }
            </td>
        </tr>
    }
</table>

@await Component.InvokeAsync("Pagination", Model)