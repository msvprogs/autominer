@{
    ViewBag.Title = "Logs";
}

<h2 class="text-center">Service logs</h2>

<div class="panel panel-default">
    <div class="panel-heading">Coin info service diagnostics</div>
    <div class="panel-body">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#coinInfoFullLogTab" data-toggle="tab">Full log</a></li>
            <li><a href="#coinInfoErrorLogTab" data-toggle="tab">Errors only</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane in active" id="coinInfoFullLogTab">
                <div class="console" id="coinInfoFullLog"></div>
            </div>
            <div class="tab-pane" id="coinInfoErrorLogTab">
                <div class="console error" id="coinInfoErrorLog"></div>
            </div>
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-heading">Control center service diagnostics</div>
    <div class="panel-body">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#controlCenterFullLogTab" data-toggle="tab">Full log</a></li>
            <li><a href="#controlCenterErrorLogTab" data-toggle="tab">Errors only</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane in active" id="controlCenterFullLogTab">
                <div class="console" id="controlCenterFullLog"></div>
            </div>
            <div class="tab-pane" id="controlCenterErrorLogTab">
                <div class="console error" id="controlCenterErrorLog"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateLogs() {
            $.ajax({
                dataType: "json",
                url: "@Url.Action("GetLogs")",
                success: function(result) {
                    updateAndScroll($("#coinInfoFullLog"), result.coinInfoFull);
                    updateAndScroll($("#coinInfoErrorLog"), result.coinInfoErrors);
                    updateAndScroll($("#controlCenterFullLog"), result.controlCenterFull);
                    updateAndScroll($("#controlCenterErrorLog"), result.controlCenterErrors);
                },
                disableThrobber: true
            });
        }

        function updateAndScroll(element, newText) {
            var oldMaxScrollHeight = element.prop('scrollHeight') - element.innerHeight();
            element.text(newText);
            // Do not scroll automatically if current scroll position isn't the most bottom line
            if (element.scrollTop() !== oldMaxScrollHeight)
                return;
            element.scrollTop(element.prop('scrollHeight') - element.innerHeight());
        }

        $(function() {
            setInterval(updateLogs, 5000);
            updateLogs();
        });
    </script>
}