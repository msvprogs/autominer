@using Msv.AutoMiner.Common.Data.Enums
@using Msv.AutoMiner.Common.Helpers
@using Msv.AutoMiner.Data
@model Msv.AutoMiner.FrontEnd.Models.Wallets.WalletEditModel

@{ ViewBag.Title = "Edit wallet details"; }

<h2 class="text-center">Edit wallet details</h2>

<div class="text-danger" asp-validation-summary="All"></div>

<form asp-action="Save" method="post">
    <input asp-for="Id" />

    <div class="form-group">
        <label asp-for="Name">Name:</label>
        <input asp-for="Name" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="CoinId">Coin:</label>
        <select asp-for="CoinId" class="form-control">
            <option value="" disabled="disabled" selected="@(Model.CoinId == null ? "selected" : "")">Select...</option>
            @foreach (var coin in Model.AvailableCoins.OrderBy(x => x.Name))
            {
                <option value="@coin.Id">@coin.Name (@coin.Symbol)</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Address">Address:</label>
        <p class="small">
            This address will be validated in accordance to the format, prefix and checksum validation rules for the selected coin.
        </p>
        <input asp-for="Address" class="form-control text-monospace" autocomplete="off" />
    </div>
    <div class="form-group">
        <label asp-for="ExchangeType">Exchange:</label>
        <select asp-for="ExchangeType" class="form-control">
            <option value="">&lt;Local wallet&gt;</option>
            @foreach (var exchangeType in EnumHelper.GetCaptionsCached<ExchangeType>()
               .Where(x => Model.AvailableExchanges.Contains(x.Key))
               .OrderBy(x => x.Value))
            {
                <option value="@exchangeType.Key">@exchangeType.Value</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="BalanceSource">Balance source (for local wallet):</label>
        <select asp-for="BalanceSource" class="form-control">
            @foreach (var balanceSource in EnumHelper.GetCaptionsCached<WalletBalanceSource>()
               .OrderBy(x => x.Value))
            {
                <option value="@balanceSource.Key">@balanceSource.Value</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="SetAsMiningTarget">
            <input type="checkbox" asp-for="SetAsMiningTarget" /> Set as mining target
        </label>
    </div>

    <button type="submit" class="btn btn-success">
        <i class="glyphicon glyphicon-floppy-disk"></i> Save
    </button>
    <a class="btn btn-default" asp-action="Index">
        <i class="glyphicon glyphicon-chevron-left"></i> Return to wallets list
    </a>
</form>

@section Scripts{
    <script>
        $(function () {
            var exchangeTypeSelect = $("select#ExchangeType");
            exchangeTypeSelect.change(function() {
                $("select#BalanceSource").prop("disabled", exchangeTypeSelect.prop("selectedIndex") !== 0);
            });
            exchangeTypeSelect.change();
        })
    </script>
}