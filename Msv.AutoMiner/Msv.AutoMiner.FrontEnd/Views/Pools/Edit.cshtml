@using Msv.AutoMiner.Common.Data.Enums
@using Msv.AutoMiner.Common.Helpers
@using Msv.AutoMiner.Data
@model Msv.AutoMiner.FrontEnd.Models.Pools.PoolEditModel

@{ ViewBag.Title = "Edit pool details";}    

<h2 class="text-center">Edit pool details</h2>

<div class="text-danger" asp-validation-summary="All"></div>

<form asp-action="Save" method="post">
    <input asp-for="Id" />

    <h3>Basic info</h3>
    <div class="form-group">
        <label asp-for="CoinId">Coin:</label>
        <select asp-for="CoinId" class="form-control">
            <option value="" disabled="disabled" selected="@(Model.CoinId == null ? "selected" : "")">Select...</option>
            @foreach (var coin in Model.AvailableCoins.OrderBy(x => x.Name))
            {
                <option value="@coin.Id">@coin.Name (@coin.Symbol)</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Name">Name:</label>
        <input asp-for="Name" class="form-control" placeholder="For example, SuprNova_BitCoin"/>
    </div>
    <div class="form-group">
        <label asp-for="Url">URL:</label>
        <input asp-for="Url" class="form-control" />
    </div>
    @if (Model.ChooseProtocol)
    {
        <div class="form-group">
            <label asp-for="PoolProtocol">Protocol:</label>
            <select asp-for="PoolProtocol" class="form-control">
                @foreach (var protocol in EnumHelper.GetCaptionsCached<PoolProtocol>()
                    .Where(x => x.Key != PoolProtocol.JsonRpc && x.Key != PoolProtocol.Stratum)
                    .OrderBy(x => x.Value))
                {
                    <option value="@protocol.Key">@protocol.Value</option>
                }
            </select>
        </div>
    }
    else
    {
        <input type="hidden" asp-for="PoolProtocol" value="@Model.PoolProtocol" />
    }
    <div class="form-group">
        <label asp-for="IsAnonymous">
            <input type="checkbox" asp-for="IsAnonymous" /> Is anonymous
        </label>
        <p class="small">
            If this option is checked, address of the wallet specified as mining target will be used as login.
        </p>
    </div>
    <div class="form-group">
        <label asp-for="UseBtcWallet">
            <input type="checkbox" asp-for="UseBtcWallet" /> Mine to BitCoin wallet
        </label>
        <p class="small">
            Check this option to use BitCoin wallet for mining. 
            Required for pools that automatically convert earnings to BTC. For example, zpool.ca does so.
            <br />
            For anonymous pools, BitCoin mining target address will be used.
        </p>
    </div>
    <div class="form-group">
        <label asp-for="WorkerLogin">Login:</label>
        <p class="small">
            For anonymous pools: leave empty or specify rig ID if required. Login with rig ID looks like <span class="text-monospace">walletAddress.rigId</span>
            (example: <span class="text-monospace">iCg9NSKMfYvSTQ55TAypFQaTBz28wExacw.myRig</span>)
            <br />For pools with registration: specify your worker login.
        </p>
        <input asp-for="WorkerLogin" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="WorkerPassword">Password:</label>
        <p class="small">
            For anonymous pools: just leave empty or specify pool-specific parameters. 
            For Yiimp-based pools you should always set target currency in the following format: <span class="text-monospace">c=BTC</span>
            <br />For pools with registration: specify your worker password.
        </p>
        <input asp-for="WorkerPassword" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Priority">Priority (the higher is the number, the more important pool is):</label>
        <input asp-for="Priority" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="FeeRatio">Pool fee (in %):</label>
        <p class="small">
            Most of the pools return this value in API response, so it will be updated automatically.
        </p>
        <input asp-for="FeeRatio" class="form-control" />
    </div>

    <h3>Pool info provider parameters</h3>
    <div class="form-group">
        <label asp-for="PoolApiProtocol">API type:</label>
        <select asp-for="PoolApiProtocol" class="form-control">
            @foreach (var apiType in EnumHelper.GetCaptionsCached<PoolApiProtocol>().OrderBy(x => x.Value))
            {
                <option value="@apiType.Key">@apiType.Value</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="ApiUrl">API URL:</label>
        <p id="poolApiUrlDescription" class="small"></p>
        <input asp-for="ApiUrl" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="ApiKey">API key:</label>
        <p id="poolApiKeyDescription" class="small"></p>
        <input asp-for="ApiKey" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="ApiPoolName">API pool name:</label>
        <p id="poolApiPoolNameDescription" class="small"></p>
        <input asp-for="ApiPoolName" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="ApiPoolUserId">API pool user ID:</label>
        <p id="poolApiUserIdDescription" class="small"></p>
        <input asp-for="ApiPoolUserId" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="TimeZoneCorrectionHours">Timezone offset from UTC in hours (may be fractional):</label>
        <p class="small">
            Some pools use non-standard timezones instead of UTC when returning account operations list. 
            You can correct operation timestamps by specifying the UTC offset of the pool timezone.
        </p>
        <input asp-for="TimeZoneCorrectionHours" class="form-control" placeholder="1 means UTC+1, -5 means UTC-5" />
    </div>

    <button type="submit" class="btn btn-success">
        <i class="glyphicon glyphicon-floppy-disk"></i> Save
    </button>
    <a class="btn btn-default" asp-action="Index">
        <i class="glyphicon glyphicon-chevron-left"></i> Return to pools list
    </a>
</form>