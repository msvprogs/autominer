@using Msv.AutoMiner.Common.Enums
@using Msv.AutoMiner.Common.Helpers
@using Msv.AutoMiner.FrontEnd.Controllers
@model Msv.AutoMiner.FrontEnd.Models.Pools.PoolDisplayModel[]

    @if (TempData[PoolsController.PoolsMessageKey] != null)
    {
        <div class="panel panel-success">
            <div class="panel-body text-success">
                @TempData[PoolsController.PoolsMessageKey]
            </div>
        </div>
    }

    <h2 class="text-center">Pools</h2>
    <div class="pull-right div-table-actions">
        <a class="btn btn-info" asp-action="CreateStratum">
            <i class="glyphicon glyphicon-plus"></i> Add Stratum pool...
        </a>
        <a class="btn btn-info" asp-action="CreateSolo">
            <i class="glyphicon glyphicon-plus"></i> Add solo-mining pool...
        </a>
    </div>
    <table class="table table-bordered table-striped">
        <tr>
            <th>Coin symbol</th>
            <th>Coin name</th>
            <th>Pool name</th>
            <th>Confirmed</th>
            <th>Unconfirmed</th>
            <th>Total hashrate</th>
            <th>Total workers</th>
            <th>Priority</th>
            <th>Last updated</th>
            <th class="column-actions">Actions</th>
        </tr>
        @foreach (var pool in Model.OrderBy(x => x.Coin.Symbol)
   .ThenBy(x => x.Coin.Name)
   .ThenByDescending(x => x.Priority))
        {
            string rowClass;
            string title;
            if (pool.Activity == ActivityState.Inactive)
            {
                rowClass = "text-muted";
                title = "Pool is inactive";
            }
            else if (!pool.HasApi)
            {
                rowClass = "danger";
                title = "There is no API providing state information for this pool";
            }
            else if (pool.LastUpdated == null || pool.LastUpdated < DateTime.UtcNow - TimeSpan.FromMinutes(40))
            {
                rowClass = "warning";
                title = "Pool data is unavailable or obsolete";
            }
            else if (pool.PoolWorkers == 0)
            {
                rowClass = "warning";
                title = "There are no workers on this pool";
            }
            else
            {
                rowClass = null;
                title = null;
            }

            var confirmedBalanceClass = "text-right";
            var unconfirmedBalanceClass = confirmedBalanceClass;

            if (pool.ConfirmedBalance <= 0)
            {
                confirmedBalanceClass += " text-muted";
            }
            else
            {
                confirmedBalanceClass += " positive-balance";
            }

            if (pool.UnconfirmedBalance <= 0)
            {
                unconfirmedBalanceClass += " text-muted";
            }
            else
            {
                unconfirmedBalanceClass += " positive-balance";
            }

            <tr class="@rowClass" title="@title">
                <td>@pool.Coin.Symbol</td>
                <td>@pool.Coin.Name</td>
                <td>@pool.Name</td>
                <td class="@confirmedBalanceClass">@pool.ConfirmedBalance.ToString("N6")</td>
                <td class="@unconfirmedBalanceClass">@pool.UnconfirmedBalance.ToString("N6")</td>
                <td>@(pool.PoolHashRate > 0 ? ConversionHelper.ToHashRateWithUnits(pool.PoolHashRate, pool.Coin.Algorithm.KnownValue) : "unavailable")</td>
                <td>@pool.PoolWorkers</td>
                <td>@pool.Priority</td>
                <td msv-absolute-date="@pool.LastUpdated"></td>
                <td>
                    <ul class="list-inline">
                        <li>
                            <a class="btn btn-xs btn-primary" asp-action="Edit" asp-route-id="@pool.Id" title="Edit pool">
                                <i class="glyphicon glyphicon-edit"></i>
                            </a>
                        </li>
                        <li>
                            @{
                                var activationButtonTitle = pool.Activity == ActivityState.Active
                                    ? "Disable pool"
                                    : "Enable pool";
                            }
                            <form asp-action="ToggleActive" asp-route-id="@pool.Id" method="post" title="@activationButtonTitle">
                                <button class="btn btn-xs btn-info">
                                    @if (pool.Activity == ActivityState.Active)
                                    {
                                        <i class="glyphicon glyphicon-remove"></i>
                                    }
                                    else if (pool.Activity == ActivityState.Inactive)
                                    {
                                        <i class="glyphicon glyphicon-flash"></i>
                                    }
                                </button>
                            </form>
                        </li>
                    </ul>
                </td>
            </tr>
        }
    </table>