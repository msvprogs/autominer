<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".cs" #>
using System;
using System.Reflection;
using Msv.Licensing.Common;

<#
    const int randomSeed = 8342779;
    const string publicKey =
        "BgIAAACkAABSU0ExAAQAAAEAAQDZdm20wFjURUZCUBa6ooSe8zbNqUG79tTyLdXQ5ElI1VGEPDPJrFInoRGzWM0jNdVhmx2Tr/O5wV7eBIx3o5K47EuSpqEGkOogM4kGQZXo41i44tjmeTdoylPFh/w0DuPcz/+1wXVXYHkIscyYJSnt/yvomHtsxG7gqU3+6Dbl0A==";
#>
namespace Msv.Licensing.Client
{
	internal class PublicKeyProvider : IPublicKeyProvider
	{
		[Obfuscation(Exclude = true)]
		public dynamic Provide()
		{
			dynamic key = new char[int.Parse("<#=publicKey.Length#>")];
<#
var random = new Random(randomSeed);
var indexes = Enumerable.Range(0, publicKey.Length)
    .OrderBy(x => random.Next())
    .ToArray();
for (var i = 0; i < publicKey.Length; i++)
{
#>
			key[int.Parse("<#=indexes[i]#>")] = "<#=publicKey[indexes[i]]#><#=random.Next()#>"[0];
<#
}
#>

			return Convert.FromBase64CharArray(key, 0, key.Length);
		}
	}
}